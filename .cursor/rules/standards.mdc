---
alwaysApply: true
---
* Package manager is yarn (not npm)

* Adhere to the single purpose principle within functions, and prefer a more expressive rather than imperative style.  `const` declarations are within the spirit of expressiveness, especially when clarifying the meaning of an expression, and of course for reuse.  Breaking sub-tasks into separate functions also makes for more self-documenting code.

* Don't add superfluous comments.  Don't add comments regarding changes being made (e.g. No "// added this").

* Prefix with `_` for unused arguments.

* Enclose `case` blocks in braces if any consts/variables introduced.

* Prefix intentional calls to unused promises (micro-tasks) with `void`.

* ES Modules, so always include `.js` on imports

* This project uses @.editorconfig to enforce consistent coding styles across editors and IDEs.  Summary: Tab indentation,  Single quotes for strings.  The complete configuration is defined in [.editorconfig](mdc:.editorconfig).

* Use "satisfies" rather than casting when possible

* Don't use "any" unless it's a genuine case of taking any type, such as serialization.  Don't "monkey patch" attributes into objects; use proper types and interfaces.

* Never inline imports() unless implementing a module system

* Avoid "swallowing" exceptions; either the condition is expected and shouldn't be an exception, or it's unexpected and should be propagated.

* Small, single-purpose functions/methods.  Prefer to decompose into other functions over documented sub-sections - let the function names document the semantics.

This is an important system; write production-grade, maintainble, and expressive code that we don't have to revisit later.
